"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = schedule;

var _defaults = _interopRequireDefault(require("../defaults"));

var _batchedUpdates = require("./batched-updates");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var QUEUE = [];
var scheduled;

function schedule(fn) {
  // if we are in node/tests or explicitly told not to,
  // disable async batching
  if (!_defaults["default"].batchUpdates) return (0, _batchedUpdates.unstable_batchedUpdates)(function () {
    return fn();
  }); // Add to queue if not already there
  // so we avoid multiple notifications to same store

  if (!QUEUE.includes(fn)) QUEUE.push(fn); // if something already started schedule, skip

  if (scheduled) return; // use promise then to wait next tick before notifying

  scheduled = Promise.resolve().then(function runNotifyQueue() {
    (0, _batchedUpdates.unstable_batchedUpdates)(function () {
      for (var i = 0; i < QUEUE.length; i++) {
        QUEUE[i]();
      }
    });
    QUEUE.length = 0;
    scheduled = null;
  });
}