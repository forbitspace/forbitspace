import applyMiddleware from '../middlewares';
import withDevtools from '../enhancers/devtools';
import defaults from '../defaults';
import schedule from '../utils/schedule';

function createStoreState(key, initialState) {
  var _listeners = [];
  var currentState = initialState;
  var storeState = {
    key: key,
    getState: function getState() {
      return currentState;
    },
    setState: function setState(nextState) {
      currentState = nextState; // Instead of notifying all hooks immediately, we wait next tick
      // so multiple actions affecting the same store gets combined

      schedule(storeState.notify);
    },
    resetState: function resetState() {
      storeState.setState(initialState);
    },
    notify: function notify() {
      var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : storeState;

      for (var i = 0; i < _listeners.length; i++) {
        _listeners[i](s.getState(), s);
      }
    },
    subscribe: function subscribe(listener) {
      _listeners = _listeners.concat(listener);
      return function unsubscribe() {
        _listeners = _listeners.filter(function (fn) {
          return fn !== listener;
        });
      };
    },
    listeners: function listeners() {
      return _listeners;
    }
  };
  storeState.mutator = applyMiddleware(storeState, defaults.middlewares);
  return storeState;
}

export default withDevtools(createStoreState);