{"ast":null,"code":"var _jsxFileName = \"/Users/spacefintechbe02/Desktop/01-document/forbitspace-home/forbitspace/client/components/Planets/Planet.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport LazyLoad from \"react-lazyload\";\n\nconst Planet = () => {\n  const DataRender = [{\n    img: \"planet-1\"\n  }, {\n    img: \"planet-2\"\n  }, {\n    img: \"planet-3\"\n  }, {\n    img: \"planet-4\"\n  }, {\n    img: \"planet-5\"\n  }, {\n    img: \"planet-6\"\n  }, {\n    img: \"planet-7\"\n  }, {\n    img: \"planet-8\"\n  }];\n\n  const RenderSystem = ({\n    data\n  }) => {\n    return __jsx(System, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, data.map((item, index) => __jsx(Planets, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, __jsx(LazyLoad, {\n      height: 80,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: `../images/space-planets/${item.img}.svg`,\n      alt: item.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    })))));\n  };\n\n  return __jsx(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Orbit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(WrapperPlanet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(Circle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, __jsx(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, __jsx(LazyLoad, {\n    height: 180,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, __jsx(\"img\", {\n    src: \"../images/space-planets/logo.png\",\n    alt: \"logo-forbitspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }))), __jsx(RenderSystem, {\n    data: DataRender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), __jsx(Earth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, __jsx(LazyLoad, {\n    height: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, __jsx(\"img\", {\n    src: \"../images/space-planets/earth.svg\",\n    alt: \"earth-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  })), __jsx(Moon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, __jsx(LazyLoad, {\n    height: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    src: \"../images/space-planets/moon.svg\",\n    alt: \"moon-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\nconst Main = styled.div`\n    display: flex;\n    background-size: cover;\n    align-items: center;\n    justify-content: flex-start;\n`;\nconst Orbit = styled.div`\n    height: 80%;\n    width: 100%;\n    border-radius: 20%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst WrapperPlanet = styled.div`\n    display: flex;\n    justify-content: center;\n    @media (min-height: 1260px) {\n        transform: scale(1.3);\n    }\n    @media (min-width: 1281px) {\n        transform: scale(1.3);\n    }\n\n    @media (min-width: 1024px) {\n        transform: scale(1);\n    }\n\n    @media (max-height: 768px) {\n        transform: scale(0.7);\n    }\n\n    @media (max-height: 768px) {\n        transform: scale(0.7);\n    }\n`;\nconst System = styled.div``;\nconst Circle = styled.div`\n    width: 800px;\n    height: 800px;\n    max-width: 800px;\n    max-height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-image: url(\"../images/space-planets/circle-line.png\");\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n    position: relative;\n    animation-name: spin;\n    animation-duration: 30000ms;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n    @keyframes spin {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(-360deg);\n        }\n    }\n`;\nconst Logo = styled.div`\n    width: auto;\n    max-width: 20%;\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    animation-name: spins;\n    animation-duration: 30000ms;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n    img {\n        height: auto;\n        width: 160px;\n    }\n    @keyframes spins {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n`;\nconst Planets = styled.div`\n    position: absolute;\n    width: auto;\n    max-width: 24%;\n\n    img {\n        animation-name: spinning;\n        animation-duration: 30000ms;\n        animation-iteration-count: infinite;\n        animation-timing-function: linear;\n    }\n    :nth-child(1) {\n        right: 15%;\n        top: 16%;\n        img {\n            width: 190px;\n        }\n    }\n\n    :nth-child(2) {\n        left: 11%;\n        top: 58%;\n        img {\n            width: 140px;\n        }\n    }\n\n    :nth-child(3) {\n        right: 11%;\n        bottom: 16%;\n        img {\n            width: 73px;\n        }\n    }\n\n    :nth-child(4) {\n        left: 35%;\n        top: 20%;\n        img {\n            width: 58px;\n        }\n    }\n\n    :nth-child(5) {\n        right: 45%;\n        top: -4%;\n        img {\n            width: 73px;\n        }\n    }\n\n    :nth-child(6) {\n        right: 45%;\n        top: 32%;\n        img {\n            width: 28.5px;\n        }\n    }\n\n    :nth-child(7) {\n        right: 28%;\n        top: 54%;\n        img {\n            width: 52px;\n        }\n    }\n\n    :nth-child(8) {\n        left: 35%;\n        bottom: -1%;\n        img {\n            width: 28.5px;\n        }\n    }\n    @keyframes spinning {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n`;\nconst Earth = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    right: 47%;\n    bottom: 21%;\n    img {\n        width: 80px;\n        animation-name: spinning;\n        animation-duration: 30000ms;\n        animation-iteration-count: infinite;\n        animation-timing-function: linear;\n    }\n`;\nconst Moon = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    /* background: #fff; */\n    animation-name: spin;\n    animation-duration: 10000ms;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n    img {\n        width: 16px;\n        position: absolute;\n        top: -16px;\n        right: 0;\n    }\n`;\nexport default Planet;","map":{"version":3,"sources":["/Users/spacefintechbe02/Desktop/01-document/forbitspace-home/forbitspace/client/components/Planets/Planet.jsx"],"names":["styled","LazyLoad","Planet","DataRender","img","RenderSystem","data","map","item","index","Main","div","Orbit","WrapperPlanet","System","Circle","Logo","Planets","Earth","Moon"],"mappings":"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ACA;AACA;AACA;AACA,CAzBA;AA0BA,MAAMK,IAAI,GAAGhB,MAAM,CAACW,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;AA2BA,MAAMM,OAAO,GAAGjB,MAAM,CAACW,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlFA;AAmFA,MAAMO,KAAK,GAAGlB,MAAM,CAACW,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAeA,MAAMQ,IAAI,GAAGnB,MAAM,CAACW,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,eAAeT,MAAf","sourcesContent":["import styled from \"styled-components\";\nimport LazyLoad from \"react-lazyload\";\n\nconst Planet = () => {\n    const DataRender = [\n        {\n            img: \"planet-1\",\n        },\n        {\n            img: \"planet-2\",\n        },\n        {\n            img: \"planet-3\",\n        },\n        {\n            img: \"planet-4\",\n        },\n        {\n            img: \"planet-5\",\n        },\n        {\n            img: \"planet-6\",\n        },\n        {\n            img: \"planet-7\",\n        },\n        {\n            img: \"planet-8\",\n        },\n    ];\n\n    const RenderSystem = ({ data }) => {\n        return (\n            <System>\n                {data.map((item, index) => (\n                    <Planets key={index}>\n                        <LazyLoad height={80}>\n                            <img\n                                src={`../images/space-planets/${item.img}.svg`}\n                                alt={item.img}\n                            />\n                        </LazyLoad>\n                    </Planets>\n                ))}\n            </System>\n        );\n    };\n\n    return (\n        <Main>\n            <Orbit>\n                <WrapperPlanet>\n                    <Circle>\n                        <Logo>\n                            <LazyLoad height={180}>\n                                <img\n                                    src=\"../images/space-planets/logo.png\"\n                                    alt=\"logo-forbitspace\"\n                                />\n                            </LazyLoad>\n                        </Logo>\n                        <RenderSystem data={DataRender} />\n                        <Earth>\n                            <LazyLoad height={80}>\n                                <img\n                                    src=\"../images/space-planets/earth.svg\"\n                                    alt=\"earth-image\"\n                                />\n                            </LazyLoad>\n                            <Moon>\n                                <LazyLoad height={80}>\n                                    <img\n                                        src=\"../images/space-planets/moon.svg\"\n                                        alt=\"moon-image\"\n                                    />\n                                </LazyLoad>\n                            </Moon>\n                        </Earth>\n                    </Circle>\n                </WrapperPlanet>\n            </Orbit>\n        </Main>\n    );\n};\n\nconst Main = styled.div`\n    display: flex;\n    background-size: cover;\n    align-items: center;\n    justify-content: flex-start;\n`;\n\nconst Orbit = styled.div`\n    height: 80%;\n    width: 100%;\n    border-radius: 20%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst WrapperPlanet = styled.div`\n    display: flex;\n    justify-content: center;\n    @media (min-height: 1260px) {\n        transform: scale(1.3);\n    }\n    @media (min-width: 1281px) {\n        transform: scale(1.3);\n    }\n\n    @media (min-width: 1024px) {\n        transform: scale(1);\n    }\n\n    @media (max-height: 768px) {\n        transform: scale(0.7);\n    }\n\n    @media (max-height: 768px) {\n        transform: scale(0.7);\n    }\n`;\nconst System = styled.div``;\nconst Circle = styled.div`\n    width: 800px;\n    height: 800px;\n    max-width: 800px;\n    max-height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-image: url(\"../images/space-planets/circle-line.png\");\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n    position: relative;\n    animation-name: spin;\n    animation-duration: 30000ms;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n    @keyframes spin {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(-360deg);\n        }\n    }\n`;\nconst Logo = styled.div`\n    width: auto;\n    max-width: 20%;\n    background-size: contain;\n    background-position: center;\n    background-repeat: no-repeat;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    animation-name: spins;\n    animation-duration: 30000ms;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n    img {\n        height: auto;\n        width: 160px;\n    }\n    @keyframes spins {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n`;\nconst Planets = styled.div`\n    position: absolute;\n    width: auto;\n    max-width: 24%;\n\n    img {\n        animation-name: spinning;\n        animation-duration: 30000ms;\n        animation-iteration-count: infinite;\n        animation-timing-function: linear;\n    }\n    :nth-child(1) {\n        right: 15%;\n        top: 16%;\n        img {\n            width: 190px;\n        }\n    }\n\n    :nth-child(2) {\n        left: 11%;\n        top: 58%;\n        img {\n            width: 140px;\n        }\n    }\n\n    :nth-child(3) {\n        right: 11%;\n        bottom: 16%;\n        img {\n            width: 73px;\n        }\n    }\n\n    :nth-child(4) {\n        left: 35%;\n        top: 20%;\n        img {\n            width: 58px;\n        }\n    }\n\n    :nth-child(5) {\n        right: 45%;\n        top: -4%;\n        img {\n            width: 73px;\n        }\n    }\n\n    :nth-child(6) {\n        right: 45%;\n        top: 32%;\n        img {\n            width: 28.5px;\n        }\n    }\n\n    :nth-child(7) {\n        right: 28%;\n        top: 54%;\n        img {\n            width: 52px;\n        }\n    }\n\n    :nth-child(8) {\n        left: 35%;\n        bottom: -1%;\n        img {\n            width: 28.5px;\n        }\n    }\n    @keyframes spinning {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n`;\nconst Earth = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    right: 47%;\n    bottom: 21%;\n    img {\n        width: 80px;\n        animation-name: spinning;\n        animation-duration: 30000ms;\n        animation-iteration-count: infinite;\n        animation-timing-function: linear;\n    }\n`;\nconst Moon = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    /* background: #fff; */\n    animation-name: spin;\n    animation-duration: 10000ms;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n    img {\n        width: 16px;\n        position: absolute;\n        top: -16px;\n        right: 0;\n    }\n`;\n\nexport default Planet;\n"]},"metadata":{},"sourceType":"module"}