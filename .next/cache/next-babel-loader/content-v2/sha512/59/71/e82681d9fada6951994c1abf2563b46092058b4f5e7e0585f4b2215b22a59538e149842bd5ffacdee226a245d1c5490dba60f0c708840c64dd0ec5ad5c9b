{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/spacefintechbe02/Desktop/document/forbitspace-home/forbitspace/client/components/Order/components/Implementation.jsx\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  width: calc((100% - 80px));\\n  text-align: left;\\n\\n  padding: 15px 35px;\\n  border-radius: 12px;\\n\\n  transition: 0.2s;\\n\\n  h2 {\\n    font-size: 44px;\\n  }\\n\\n  :nth-child(odd) {\\n    padding-right: 50%;\\n    @media (max-width: 1024px) {\\n      padding-right: 40%;\\n    }\\n  }\\n  :nth-child(even) {\\n    text-align: right;\\n    padding-left: 50%;\\n    @media (max-width: 1024px) {\\n      padding-left: 35%;\\n    }\\n  }\\n  :nth-child(4) {\\n    padding-left: 40%;\\n    @media (max-width: 1024px) {\\n      padding-left: 30%;\\n    }\\n  }\\n\\n  :hover {\\n    transform: scale(1.12);\\n  }\\n\\n  @media (max-width: 768px) {\\n    width: calc(100% - 20px);\\n    text-align: left !important;\\n    padding: 10px !important;\\n    margin: 40px 0 !important;\\n\\n    h2 {\\n      font-size: 30px;\\n      font-weight: 600;\\n      letter-spacing: unset;\\n    }\\n  }\\n\\n  @media (max-width: 415px) {\\n    padding: 0px !important;\\n    margin: 20px 0 !important;\\n\\n    h2 {\\n      font-size: 20px;\\n      font-weight: 500;\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  row-gap: 240px;\\n  justify-content: space-between;\\n\\n  margin: 150px auto 50px;\\n\\n  @media (max-width: 768px) {\\n    padding: 0 10px;\\n  }\\n\\n  @media (max-width: 768px) {\\n    gap: 10px !important;\\n    margin: 20px auto;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 1.2rem;\\n  font-weight: 300;\\n  margin: 0;\\n  @media (max-width: 576px) {\\n    font-size: 14px;\\n  }\\n  @media (max-width: 320px) {\\n    font-size: 12px;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 4rem;\\n  line-height: 1.2;\\n  font-weight: 600;\\n  @media (max-width: 576px) {\\n    font-size: 45px;\\n    letter-spacing: 2px;\\n  }\\n  @media (max-width: 375px) {\\n    font-size: 35px;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  @media (max-width: 576px) {\\n    margin-left: 0;\\n    margin-top: 40px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  position: relative;\\n  padding: 50px 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { ImplementData } from \"../constants\";\n\nvar Implementation = function Implementation() {\n  var RenderImplement = function RenderImplement(_ref) {\n    var data = _ref.data;\n    return __jsx(BoxContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, data.map(function (item, index) {\n      return __jsx(Content, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }\n      }, __jsx(Title, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }\n      }, item.title), __jsx(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, item.text));\n    }));\n  };\n\n  return __jsx(WrapperImplement, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(HeaderContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Implementations\"), __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Below are some use cases for the forbitspace Limit Order Protocol. But the protocol is very flexible, and you can build much more on top of it!\")), __jsx(RenderImplement, {\n    data: ImplementData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = Implementation;\nvar WrapperImplement = styled.section(_templateObject());\n_c2 = WrapperImplement;\nvar HeaderContent = styled.div(_templateObject2());\n_c3 = HeaderContent;\nvar Title = styled.h2(_templateObject3());\n_c4 = Title;\nvar Text = styled.p(_templateObject4());\n_c5 = Text;\nvar BoxContent = styled.div(_templateObject5());\n_c6 = BoxContent;\nvar Content = styled.div(_templateObject6());\n_c7 = Content;\nexport default Implementation;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Implementation\");\n$RefreshReg$(_c2, \"WrapperImplement\");\n$RefreshReg$(_c3, \"HeaderContent\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Text\");\n$RefreshReg$(_c6, \"BoxContent\");\n$RefreshReg$(_c7, \"Content\");","map":{"version":3,"sources":["/Users/spacefintechbe02/Desktop/document/forbitspace-home/forbitspace/client/components/Order/components/Implementation.jsx"],"names":["styled","ImplementData","Implementation","RenderImplement","data","map","item","index","title","text","WrapperImplement","section","HeaderContent","div","Title","h2","Text","p","BoxContent","Content"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAc;AAAA,QAAXC,IAAW,QAAXA,IAAW;AACpC,WACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,aACR,MAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQD,IAAI,CAACE,KAAb,CADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,IAAI,CAACG,IAAZ,CAFF,CADQ;AAAA,KAAT,CADH,CADF;AAUD,GAXD;;AAYA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uJAFF,CADF,EASE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAER,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CA1BD;;KAAMC,c;AA4BN,IAAMQ,gBAAgB,GAAGV,MAAM,CAACW,OAAV,mBAAtB;MAAMD,gB;AAKN,IAAME,aAAa,GAAGZ,MAAM,CAACa,GAAV,oBAAnB;MAAMD,a;AAON,IAAME,KAAK,GAAGd,MAAM,CAACe,EAAV,oBAAX;MAAMD,K;AAaN,IAAME,IAAI,GAAGhB,MAAM,CAACiB,CAAV,oBAAV;MAAMD,I;AAYN,IAAME,UAAU,GAAGlB,MAAM,CAACa,GAAV,oBAAhB;MAAMK,U;AAkBN,IAAMC,OAAO,GAAGnB,MAAM,CAACa,GAAV,oBAAb;MAAMM,O;AA6DN,eAAejB,cAAf","sourcesContent":["import styled from \"styled-components\";\nimport { ImplementData } from \"../constants\";\n\nconst Implementation = () => {\n  const RenderImplement = ({ data }) => {\n    return (\n      <BoxContent>\n        {data.map((item, index) => (\n          <Content key={index}>\n            <Title>{item.title}</Title>\n            <Text>{item.text}</Text>\n          </Content>\n        ))}\n      </BoxContent>\n    );\n  };\n  return (\n    <WrapperImplement>\n      <HeaderContent>\n        <Title>Implementations</Title>\n        <Text>\n          Below are some use cases for the forbitspace Limit Order Protocol. But\n          the protocol is very flexible, and you can build much more on top of\n          it!\n        </Text>\n      </HeaderContent>\n      <RenderImplement data={ImplementData} />\n    </WrapperImplement>\n  );\n};\n\nconst WrapperImplement = styled.section`\n  text-align: center;\n  position: relative;\n  padding: 50px 0;\n`;\nconst HeaderContent = styled.div`\n  @media (max-width: 576px) {\n    margin-left: 0;\n    margin-top: 40px;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 4rem;\n  line-height: 1.2;\n  font-weight: 600;\n  @media (max-width: 576px) {\n    font-size: 45px;\n    letter-spacing: 2px;\n  }\n  @media (max-width: 375px) {\n    font-size: 35px;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 1.2rem;\n  font-weight: 300;\n  margin: 0;\n  @media (max-width: 576px) {\n    font-size: 14px;\n  }\n  @media (max-width: 320px) {\n    font-size: 12px;\n  }\n`;\n\nconst BoxContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 240px;\n  justify-content: space-between;\n\n  margin: 150px auto 50px;\n\n  @media (max-width: 768px) {\n    padding: 0 10px;\n  }\n\n  @media (max-width: 768px) {\n    gap: 10px !important;\n    margin: 20px auto;\n  }\n`;\n\nconst Content = styled.div`\n  width: calc((100% - 80px));\n  text-align: left;\n\n  padding: 15px 35px;\n  border-radius: 12px;\n\n  transition: 0.2s;\n\n  h2 {\n    font-size: 44px;\n  }\n\n  :nth-child(odd) {\n    padding-right: 50%;\n    @media (max-width: 1024px) {\n      padding-right: 40%;\n    }\n  }\n  :nth-child(even) {\n    text-align: right;\n    padding-left: 50%;\n    @media (max-width: 1024px) {\n      padding-left: 35%;\n    }\n  }\n  :nth-child(4) {\n    padding-left: 40%;\n    @media (max-width: 1024px) {\n      padding-left: 30%;\n    }\n  }\n\n  :hover {\n    transform: scale(1.12);\n  }\n\n  @media (max-width: 768px) {\n    width: calc(100% - 20px);\n    text-align: left !important;\n    padding: 10px !important;\n    margin: 40px 0 !important;\n\n    h2 {\n      font-size: 30px;\n      font-weight: 600;\n      letter-spacing: unset;\n    }\n  }\n\n  @media (max-width: 415px) {\n    padding: 0px !important;\n    margin: 20px 0 !important;\n\n    h2 {\n      font-size: 20px;\n      font-weight: 500;\n    }\n  }\n`;\n\nexport default Implementation;\n"]},"metadata":{},"sourceType":"module"}